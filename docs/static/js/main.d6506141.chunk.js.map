{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GiffGridItem.js","components/GiffGrid.js","hooks/useFetchGiffs.js","GifExpert.js","index.js"],"names":["AddCategory","setCaregories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","categories","type","value","onChange","target","placeholder","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized","GiffGridItem","console","log","className","src","alt","GiffGrid","loading","state","setState","useEffect","then","useFetchGiffs","GifExpert","ReactDOM","render","document","getElementById"],"mappings":"qMA4BeA,EAzBK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAClB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAWA,OACI,sBAAMC,SARW,SAACC,GAClBA,EAAEC,iBACFN,GAAc,SAAAO,GAAU,OAAIL,GAAJ,mBAAmBK,QAM3C,SACI,uBACAC,KAAK,OACLC,MAAOP,EACPQ,SAfa,SAACL,GAClBF,EAAcE,EAAEM,OAAOF,QAenBG,YAAY,iB,+BCrBXC,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,0FAC6EC,UAAUH,GADvF,gDAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KACDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,UAAUZ,QARhB,kBAWZM,GAXY,4CAAH,sDCYLO,EAVa,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEjC,OADAc,QAAQC,IAAIL,GAER,sBAAKM,UAAU,yCAAf,UACI,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,QCHHS,EAAW,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAEtB,ECJyB,SAACA,GAC1B,MAA0Bb,mBAAS,CAC/BoB,KAAM,GACNe,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAU,WACN1B,EAASC,GACJ0B,MAAM,SAAAhB,GACCc,EAAS,CACLjB,KAAMG,EACNY,SAAS,SAG1B,CAAEtB,IAEEuB,EDZyBI,CAAe3B,GAAjCa,EAAd,EAAON,KAAce,EAArB,EAAqBA,QAErB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDlB,IACjDsB,GAAW,mBAAGJ,UAAU,mCAAb,wBAEjB,qBAAKA,UAAU,YAAf,SAEQL,EAAOJ,KAAI,SAAAC,GACP,OAAS,cAAC,EAAD,eAELA,GADGA,EAAIC,aEWhBiB,EAxBU,WAErB,MAAoCzC,mBAAS,CAAC,WAA9C,mBAAOM,EAAP,KAAmBP,EAAnB,KAEA,OACI,gCACS,gDACA,cAAC,EAAD,CAAaA,cAAeA,IAE7B,uBAGA,6BAEQO,EAAWgB,KAAI,SAAAT,GACX,OAAO,cAAC,EAAD,CAEPA,SAAUA,GADLA,Y,MCdjC6B,IAASC,OAAO,cAAC,EAAD,IAAcC,SAASC,eAAe,W","file":"static/js/main.d6506141.chunk.js","sourcesContent":["import React, {useState}from 'react'\n\n\nconst AddCategory = ({setCaregories}) => {\n    const [inputValue, setInputValue] = useState(\"\")\n    const handleChange = (e)=>{\n        setInputValue(e.target.value)\n    }\n    const handleSubmit = (e,) => {\n        e.preventDefault()\n        setCaregories(categories =>[inputValue, ...categories])\n    }\n\n    \n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input \n            type=\"text\" \n            value={inputValue}\n            onChange={handleChange}\n            placeholder=\"Search...\"\n            />\n        </form>\n    )\n}\n\n\nexport default AddCategory","export const getGifs = async(category) =>{\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=ZglZh1sQ1nsPMxCZT68akRVby34RMqlp&q=${ encodeURI(category) }&limit=12&offset=0&rating=g&lang=en`;\n    const resp = await fetch(url);\n    const {data} = await resp.json();\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized.url\n        }\n    })\n    return gifs\n    }      ","import React from 'react'\n\nexport const GiffGridItem = ({title, url}) => {\n    console.log(title)\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title}></img>\n            <p>{title}</p>\n        </div>\n    )\n}\n\nexport default GiffGridItem","import React from 'react'\nimport { useFetchGiffs } from '../hooks/useFetchGiffs'\nimport GiffGridItem from './GiffGridItem'\n\nexport const GiffGrid = ({category}) => {\n        \n    const {data : images,loading} = useFetchGiffs( category ); \n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n            { loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\n            \n        <div className=\"card-grid\">\n            {\n                images.map(img=> {\n                    return ( <GiffGridItem \n                    key = {img.id}\n                    {...img}/>)\n                }\n                )\n            }\n        </div>\n        </>\n    )\n}\n\n","import { useEffect, useState } from \"react\"\nimport {getGifs} from \"../helpers/getGifs\" \nexport const useFetchGiffs = (category) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    })\n\n    useEffect(()=>{\n        getGifs( category )\n            .then( img => {\n                    setState({\n                        data: img,\n                        loading: false\n                    })\n            })\n    }, [ category ])\n\n    return state\n}","import React from 'react'\nimport { useState } from 'react'\nimport AddCategory from './components/AddCategory'\nimport { GiffGrid } from './components/GiffGrid'\nexport const GifExpert = () => {\n    \n    const [categories, setCaregories] = useState(['Avatar'])\n    \n    return (\n        <div>\n                 <h2>Gif Expert App</h2>\n                 <AddCategory setCaregories={setCaregories}/>\n\n                <hr />\n                \n            \n                <ol>\n                    {\n                        categories.map(category=> {\n                            return <GiffGrid \n                            key={category}\n                            category={category}/> })    \n                    }\n                </ol>   \n\n        </div>\n    )\n}\nexport default GifExpert   \n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpert from './GifExpert';\nimport './index.css';\n\n\nReactDOM.render(<GifExpert />,document.getElementById('root'));\n"],"sourceRoot":""}